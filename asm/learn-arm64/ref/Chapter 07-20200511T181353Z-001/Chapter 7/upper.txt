//
// ASSEMBLER PROGRAM TO CONVERT A STRING TO
// ALL UPPER CASE BY CALLING A FUNCTION.
//
// X0-X2, X8 - USED BY MACROS TO CALL LINUX
// X11 - INPUT FILE DESCRIPTOR
// X9 - OUTPUT FILE DESCRIPTOR
// X10 - NUMBER OF CHARACTERS READ
//

#INCLUDE <ASM/UNISTD.H>
#INCLUDE "FILEIO.S"

.EQU	BUFFERLEN, 250

.GLOBAL _START	            // PROVIDE PROGRAM STARTING ADDRESS TO LINKER

_START:	OPENFILE	INFILE, O_RDONLY
	ADDS		X11, XZR, X0	// SAVE FILE DESCRIPTOR
	B.PL		NXTFIL  // POS NUMBER FILE OPENED OK
	MOV		X1, #1  // STDOUT
	LDR		X2, =INPERRSZ	// ERROR MSG
	LDR		W2, [X2]
	WRITEFILE	X1, INPERR, X2 // PRINT THE ERROR
	B		EXIT

NXTFIL: OPENFILE	OUTFILE, O_CREAT+O_WRONLY
	ADDS		X9, XZR, X0	// SAVE FILE DESCRIPTOR
	B.PL		LOOP    // POS NUMBER FILE OPENED OK
	MOV		X1, #1
	LDR		X2, =OUTERRSZ
	LDR		W2, [X2]
	WRITEFILE	X1, OUTERR, X2
	B		EXIT

// LOOP THROUGH FILE UNTIL DONE.
LOOP:	READFILE	X11, BUFFER, BUFFERLEN
	MOV		X10, X0	// KEEP THE LENGTH READ
	MOV		X1, #0	// NULL TERMINATOR FOR STRING

	// SETUP CALL TO TOUPPER AND CALL FUNCTION
	LDR		X0, =BUFFER	// FIRST PARAM FOR TOUPPER
	STRB		W1, [X0, X10]	// PUT NULL AT END OF STRING.
	LDR		X1, =OUTBUF
	BL		TOUPPER		

	WRITEFILE	X9, OUTBUF, X10

	CMP		X10, #BUFFERLEN
	BEQ		LOOP

	FLUSHCLOSE	X11
	FLUSHCLOSE	X9

// SETUP THE PARAMETERS TO EXIT THE PROGRAM
// AND THEN CALL LINUX TO DO IT.
EXIT:	MOV     X0, #0      // USE 0 RETURN CODE
        MOV     X8, #__NR_EXIT
        SVC     0           // CALL LINUX TO TERMINATE THE PROGRAM

.DATA
INFILE:  .ASCIZ  "MAIN.S"
OUTFILE: .ASCIZ	 "UPPER.TXT"
BUFFER:	.FILL	BUFFERLEN + 1, 1, 0
OUTBUF:	.FILL	BUFFERLEN + 1, 1, 0
INPERR: .ASCIZ	"FAILED TO OPEN INPUT FILE.\N"
INPERRSZ: .WORD  .-INPERR 
OUTERR:	.ASCIZ	"FAILED TO OPEN OUTPUT FILE.\N"
OUTERRSZ: .WORD	.-OUTERR

D	.-OUTERR

